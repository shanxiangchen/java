<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.mapper.MarketActivityMapper">
	<resultMap type="MarketActivity" id="marketActivityResultMap">
		<id column="activity_id" property="activityId" />
		<result column="activity_title" property="activityTitle" />
		<result column="activity_info" property="activityInfo" />
		<result column="activity_picture_id" property="activityPictureId" />
		<result column="activity_area_quale" property="activityAreaQuale" />
		<result column="activity_province" property="activityProvince" />
		<result column="activity_city" property="activityCity" />
		<result column="activity_area" property="activityArea" />
		<result column="activity_start_date" property="activityStartDate" />
		<result column="activity_end_date" property="activityEndDate" />
		<result column="activity_type_id" property="activityTypeId" />
		<result column="activity_show_order" property="activityShowOrder" />
		<result column="activity_shop_picture_id" property="activityShopPictureId" />
		<result column="is_apply" property="isApply" />
		<result column="apply_fail_describe" property="applyFailDescribe" />
		<result column="apply_fail_url_ico" property="applyFailUrlIco" />
		<result column="apply_fail_url" property="applyFailUrl" />
		<result column="apply_succeed" property="applySucceed" />
		<result column="activity_status" property="activityStatus" />
		<result column="is_top" property="isTop" />
		<result column="is_check" property="isCheck" />
		<result column="activity_no" property="activityNo" />
		<result column="true_click_count" property="trueClickCount" />
		<result column="false_click_count" property="falseClickCount" />
		<result column="is_meet_demand" property="isMeetDemand" />
		<result column="activity_meet_demand_url" property="activityMeetDemandUrl" />
		<result column="static_html_url" property="staticHtmlUrl" />
		<result column="activity_two" property="activityTwo" />
		<result column="citys_name" property="citysName" />
		<result column="city_no" property="cityNo" />
		<result column="no" property="no" />
		<result column="meet_demand_succeed_prompt" property="meetDemandSucceedPrompt" />
		<result column="meet_demand_fail_prompt" property="meetDemandFailPrompt" />
		<result column="activity_content" property="activityContent" />
		<result column="activity_in_content" property="activityInContent" />
		<result column="user_Id" property="userId"/>
		<result column="username" property="loginname"/>
		<!--一对一关系 -->
		<association property="activityType" column="activity_type_id"
			javaType="ActivityType">
			<id column="activity_type_id" property="activityTypeId" />
			<result column="activity_type" property="activityType" />
			<result column="activity_type_no" property="activityTypeNo" />
		</association>
		<!-- 异对多的关系 -->
		<association property="marketPictures" column="picture_id"
			javaType="MarketPicture">
			<id column="picture_id" property="pictureId" />
			<result column="acPic_url" property="actPictureUrl" />
			<result column="acPic_name" property="actictureName" />
			<result column="acBigPic_url" property="acBigPicUrl" />
			<result column="acBigPic_name" property="acBigPicName" />
			<result column="shopPic_url" property="shopPictureUrl" />
			<result column="shopPic_name" property="shopPictureName" />
			<result column="picture_flag" property="pictureFlag" />
			<result column="picture_size" property="pictureSize" />
			<result column="activity_id" property="activityId" />
			<result column="acPic_id" property="acPicId" />
			<result column="shopPic_id" property="shopPicId" />
			<result column="acBigPic_id" property="acBigPicId" />
		</association>
		<!-- 异对多的关系 -->
		<collection property="marActivityShop" ofType="MarketActivityShop">
			<id column="shop_id" property="shopId" />
			<result column="shop_name" property="shopName" />
			<result column="shop_address" property="shopAddress" />
			<result column="shop_phone" property="shopPhone" />
			<result column="shop_longitude" property="shopLongitude" />
			<result column="shop_latitude" property="shopLatitude" />
			<result column="shop_act_id" property="activityId" />
			<result column="is_draft" property="isDraft" />
			<result column="is_open" property="is0pen" />
		</collection>
		<!-- 异对多的关系 -->
		<collection property="cityGps" ofType="CityGps">
			<id column="city_id"  property="cityId" />
			<result column="city_no"  property="cityNo" />
			<result column="city_name"  property="cityName" />
		</collection>
	</resultMap>
	<select id="selectMarketActivityListPage" parameterType="MarketActivity"
		resultMap="marketActivityResultMap">
		  SELECT 
		       x.city_names citys_name,
               x.actId,
               x.city_no city_no,
               a.activity_id,
               a.activity_no,
               a.is_check,
               a.activity_title,
               a.activity_status,
               a.activity_start_date,
               a.activity_end_date,
               a.is_apply,
               a.is_meet_demand,
               p.picture_name acPic_name,
               p.picture_url acPic_url,
               d.picture_name shopPic_name,
               d.picture_url shopPic_url,
               t.activity_type,
               a.activity_area_quale,
               u.username 
          FROM bank_market_activity a 
			   left join bank_market_picture p on a.activity_id = p.activity_id  
			   left join bank_market_picture d on a.activity_shop_picture_id = d.picture_id
			   left join bank_activity_type t on a.activity_type_id = t.activity_type_id
			   left join (select group_concat(city.city_name) city_names,
			                       gps.activity_id actId,
			                       group_concat(city.city_no) city_no
			                  from bank_activity_and_city_gps gps, bank_city_gps city
			                 where gps.city_no = city.city_no
			                 group by gps.activity_id) x on a.activity_id = x.actId ,
			               bank_manage u
			               
		  WHERE  
	           p.picture_size = 'a'
	           and a.activity_one is null
	           and u.user_id=a.user_id
	           <if test="userIds!='' and userIds!= null and userIds != 'null'">
	           		and a.user_id in
					<foreach item="item" index="index" collection="userIds"
					open="(" separator="," close=")">
						'${item}'
					</foreach>
	            </if>
        
			   <if test="logo==2 or logo==3">
				    and a.is_check='b' or a.is_check='c'
			   </if> 
			   <if test="activityTitle!=null and activityTitle!=''">
				and a.activity_title like "%"#{activityTitle}"%"
			  </if>
			  <if test="isCheck!=null and isCheck!=''">
				and a.is_check=#{isCheck}
			  </if>				
			  <if test="activityStatus!=null and activityStatus!=''">
				and a.activity_status=#{activityStatus}
			  </if>
			              
	</select>
	<!-- <select id="selectMarketActivityListPage" parameterType="MarketActivity"
		resultMap="marketActivityResultMap">
		如果主表与从表是一对多关系 查询的结果集是多行 则配置一对多关系用 collection 实体类提供list集合
		如果主表与从表是一对多关系 查询的结果集显示为一行 则配置一对一关系用 association 实体类提供一个从表的对象类型
		这里主表与从表是一对多关系 但最终查询的结果集显示为一行，所以得配置一对一关系映射
	 
		 SELECT k.*
              FROM (SELECT x.city_names citys_name,
						       x.actId,
						       x.city_no city_no,
						       a.activity_id,
						       a.ACTIVITY_NO,
						       a.is_check,
						       a.activity_title,
						       a.activity_status,
						       a.activity_start_date,
						       a.activity_end_date,
						       a.is_apply,
						       a.is_meet_demand,
						       p.picture_name acPic_name,
						       p.picture_url acPic_url,
						       d.picture_name shopPic_name,
						       d.picture_url shopPic_url,
						       t.activity_type,
						       a.activity_area_quale,
						       u.username 
						  FROM bank_market_activity a,
						       bank_market_picture p,
						       bank_market_picture d,
						       bank_activity_type t,
						       bank_manage u,
						       bank_role_manage r,
						       
						       (select wmsys.wm_concat(city.city_name) city_names,
						               gps.activity_id actId,
						               wmsys.wm_concat(city.city_no) city_no
						          from bank_activity_and_city_gps gps, bank_city_gps city
						         where gps.city_no = city.city_no
						         group by gps.activity_id) x
						 WHERE a.activity_id = p.activity_id
						   AND p.picture_size = 'a'
						   and a.activity_shop_picture_id = d.picture_id(+)
						   AND a.activity_type_id = t.activity_type_id
						   and a.activity_one is null
						   and a.activity_id = x.actId(+)
						   and d.activity_id(+) = a.activity_id
						   and u.user_id=a.user_id
						   and u.role_id=r.role_id
						   <if test="logo==2">
							 and a.is_check='b' or a.is_check='c'
							 and r.role_two=#{roleTwo}
						</if> 
						<if test="logo==3">
								and a.user_Id=#{userId}
						</if>
                        ) k
             WHERE 1 = 1
		<if test="activityTitle!=null and activityTitle!=''">
			and k.activity_title like '%'||#{activityTitle}||'%'
		</if>
		<if test="isCheck!=null and isCheck!=''">
			and k.is_check=#{isCheck}
		</if>				
		<if test="activityStatus!=null and activityStatus!=''">
			and k.activity_status=#{activityStatus}
		</if>
		 
	</select> -->
	 
	<!--添加 1营销活动图 2.营销商户图 -->
	<!--在Mybatis Mapper文件中添加属性“useGeneratedKeys”和“keyProperty”，其中keyProperty是Java对象的属性名！ -->
	<insert id="insertMarketActivity" useGeneratedKeys="true" parameterType="MarketActivity"
		keyProperty="activityId">
		INSERT INTO
		bank_market_activity(activity_id,activity_title,activity_info, 
		activity_area_quale,activity_province,activity_city,activity_area,activity_start_date,
		activity_end_date,activity_type_id,activity_show_order,activity_shop_picture_id,is_apply,
		apply_fail_describe,apply_fail_url_ico,apply_fail_url,apply_succeed,activity_status,is_top,
		is_check,activity_one,activity_two,true_click_count,false_click_count,is_meet_demand,activity_meet_demand_url,static_html_url
		,meet_demand_succeed_prompt,meet_demand_fail_prompt,activity_content,activity_in_content,user_Id)
		VALUES (#{activityId},
		#{activityTitle},#{activityInfo},#{activityAreaQuale},
		#{activityProvince,jdbcType=VARCHAR},#{activityCity,jdbcType=VARCHAR},#{activityArea,jdbcType=VARCHAR},#{activityStartDate},#{activityEndDate},
		#{activityTypeId},#{activityShowOrder,jdbcType=INTEGER},#{activityShopPictureId},#{isApply},
		#{applyFailDescribe,jdbcType=VARCHAR},null,null,#{applySucceed,jdbcType=VARCHAR},#{activityStatus},#{isTop},'a',null,#{activityTwo},'0',#{falseClickCount},#{isMeetDemand},#{activityMeetDemandUrl,jdbcType=VARCHAR},#{staticHtmlUrl,jdbcType=VARCHAR}
		,#{meetDemandSucceedPrompt,jdbcType=VARCHAR},#{meetDemandFailPrompt,jdbcType=VARCHAR},#{activityContent,jdbcType=VARCHAR},#{activityInContent,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR})
	</insert>
	<insert id="insertMarketPicture" useGeneratedKeys="true" parameterType="MarketPicture" keyProperty="pictureId">
		INSERT INTO
		bank_market_picture(picture_id,picture_url,picture_name,picture_flag,picture_size,activity_id)
		VALUES(#{pictureId},#{actPictureUrl},#{actictureName},#{pictureFlag},#{pictureSize,jdbcType=VARCHAR},#{activityId,jdbcType=VARCHAR})
	</insert>

	<!--已过期的活动  -->
 	<select id="selectOverdueMarketActivity" resultMap="marketActivityResultMap">
	 select y.activity_id from bank_market_activity y where y.activity_end_date  &lt; to_char(sysdate,'yyyy-mm-dd')
	</select>
	
	<!-- 更改已过期活动状态-->
	<update id="updateMarketActivityStatusById" >
		UPDATE bank_market_activity   SET a.activity_status='3'
		<where>
			activity_id in
			<foreach collection="list" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</update>
	
	 
	 
	<!--根据ID查询 -->
	<select id="selectMarketActivityById" parameterType="String"
		resultMap="marketActivityResultMap">
		 
		SELECT a.*,
		  x.city_names citys_name,
	      p1.picture_name acPic_name,
	      p1.picture_url acPic_url,
	      p2.picture_name shopPic_name,
	      p2.picture_url shopPic_url,
	      p3.picture_name acBigPic_name,
	      p3.picture_url acBigPic_url,
	      p1.picture_id acPic_id,
          p2.picture_id shopPic_id,
          p3.picture_id acBigPic_id,
          t.*
    FROM bank_market_activity a
      left join bank_market_picture p2 on a.activity_shop_picture_id=p2.picture_id
      left join (select group_concat(city.city_name) city_names,
			                       gps.activity_id actId,
			                       group_concat(city.city_no) city_no
			                  from bank_activity_and_city_gps gps, bank_city_gps city
			                 where gps.city_no = city.city_no
			                 group by gps.activity_id) x on a.activity_id = x.actId ,
      bank_market_picture p1,
      bank_activity_type t,
      
      bank_market_picture p3
    WHERE a.activity_id = #{activityId}
      AND a.activity_id = p1.activity_id
      AND p1.picture_size = 'a'
      AND a.activity_type_id = t.activity_type_id
      and p3.activity_id = a.activity_id
      and p3.picture_size = 'b'
      and p1.picture_flag = p3.picture_flag
      and p1.picture_flag = 1
     
			 
	</select>

	<update id="updateMarketActivityById" parameterType="MarketActivity">
		UPDATE
		bank_market_activity a SET
		a.activity_end_date=#{activityEndDate},
		a.activity_area_quale=#{activityAreaQuale},
		a.activity_info=#{activityInfo},
		a.activity_title=#{activityTitle},
		a.activity_start_date=#{activityStartDate},
		a.activity_type_id=#{activityTypeId},
		a.activity_show_order=#{activityShowOrder,jdbcType=INTEGER},
		a.activity_status=#{activityStatus},
		a.is_top=#{isTop},
		a.activity_province=#{activityProvince,jdbcType=VARCHAR},
		a.activity_city=#{activityCity,jdbcType=VARCHAR},
		a.activity_area=#{activityArea,jdbcType=VARCHAR},
		a.is_check='a',
		a.static_html_url=#{staticHtmlUrl,jdbcType=VARCHAR},
		a.activity_shop_picture_id=#{activityShopPictureId,jdbcType=VARCHAR},
		a.is_meet_demand=#{isMeetDemand},
	    a.is_apply=#{isApply},
	    a.activity_two=#{activityTwo},
	    a.activity_meet_demand_url=#{activityMeetDemandUrl,jdbcType=VARCHAR},
	    a.meet_demand_succeed_prompt=#{meetDemandSucceedPrompt,jdbcType=VARCHAR},
		a.meet_demand_fail_prompt=#{meetDemandFailPrompt,jdbcType=VARCHAR},
		a.apply_fail_describe=#{applyFailDescribe,jdbcType=VARCHAR},
		a.apply_succeed=#{applySucceed,jdbcType=VARCHAR},
		a.activity_no=#{activityNo,jdbcType=VARCHAR},
		a.activity_shop_picture_id=#{activityShopPictureId,jdbcType=VARCHAR},
		a.activity_content=#{activityContent,jdbcType=VARCHAR},
		a.activity_in_content=#{activityInContent,jdbcType=VARCHAR}
		WHERE
		a.activity_id=#{activityId}
	</update>

	<!--根据活动ID及图片大小修改活动图片  -->
	<update id="updateMarketPictureById" parameterType="MarketPicture">
		UPDATE
		bank_market_picture p SET
			p.picture_name=#{actictureName},
			p.picture_url=#{actPictureUrl}
		WHERE
			p.activity_id=#{activityId} 
	    and
	        p.picture_size=#{pictureSize}
	</update>

    <!--根据图片ID修改商户图片  -->
	<update id="updateMarketPictureByIds" parameterType="MarketPicture">
		UPDATE
			bank_market_picture p SET
			p.picture_name=#{shopPictureName},
			p.picture_url=#{shopPictureUrl}
		WHERE 
		    p.picture_id=#{pictureId} 
	</update>

	<delete id="deleteMarketActivityById">
		delete from bank_market_activity 
		<where>
			activity_id in
			<foreach collection="array" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</delete>
	<delete id="deleteBankMarketPictureById">
	   delete from bank_market_picture 
	   <where>
			activity_id in
			<foreach collection="array" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</delete>
	
	<!--审核数据  -->
	<update id="updateMarketActivityDataById" >
		UPDATE bank_market_activity  SET is_check='b'
		<where>
			activity_id in
			<foreach collection="array" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</update>
	<update id="updateMarketActivityDataByIds" >
		UPDATE bank_market_activity  SET is_check='c'
		<where>
			activity_id in
			<foreach collection="array" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</update>
	<update id="updateReturnDataByIds" >
		UPDATE bank_market_activity  SET is_check='d'
		<where>
			activity_id in
			<foreach collection="array" item="item" index="index" open="("
				separator="," close=")">#{item}</foreach>
		</where>
	</update>

	<!--商户和活动关系列表  -->
	<select id="selectActivityShopListPage" parameterType="MarketActivity"
		resultMap="marketActivityResultMap">
	 
       SELECT k.*
              FROM (
		select a.*,
		s.shop_id,
		s.shop_name,
		s.shop_address,
		s.shop_phone,
		s.shop_longitude, 
		s.shop_latitude,
		s.activity_id shop_act_id,
		s.is_draft,
		s.is_open,
		t.activity_type
		from bank_market_activity a,
		bank_market_activity_shop s,
		bank_activity_type t
		where a.activity_id = s.activity_id
		and a.activity_type_id=t.activity_type_id
		and a.activity_one is null
		and s.shop_one is null
		) k
             WHERE 1 = 1
		<if test="shopName!=null and shopName!=''">
			 
			and k.shop_name like "%"#{shopName}"%"
		</if>
		<if test="activityTitle!=null and activityTitle!=''">
			and k.activity_title like "%"#{activityTitle}"%"
		</if>
				 
	</select>
  
	<!-- 查询营销活动,活动Id,标题 -->
	<select id="selectActivityPageList" resultMap="marketActivityResultMap" parameterType="MarketActivity">
		 select activity_id,activity_title
		    from bank_market_activity
            where  activity_one is null
            <if test="activityTitle!=null and activityTitle!=''">
            	and  activity_title like "%"#{activityTitle}"%"
            </if>
            
	</select>
	 
	<select id="selectShopNameByShopId" resultMap="marketActivityResultMap" parameterType="String">
		select shop_id,shop_name
		from bank_market_activity_shop where  shop_id=#{shopId}
	</select>
	<!--查询某商户是否与某活动存在关联  -->
	<select id="selectCountByShopIdAndActivityId" resultType="int" parameterType="HashMap">
		select count(1) from bank_market_activity_shop a where  shop_id=#{shopId} and a.activity_id=#{activityId}
	</select>
	 
	<!--根据商户ID查询其关联的活动是否已经结束  -->
	<select id="selectCountByShopId" resultType="int" parameterType="HashMap">
		select count(1) from  bank_market_activity_shop b join bank_market_activity c on b.activity_id=c.activity_id and c.activity_status not in('2','3') where b.shop_id=#{shopId}
	</select>

	<update id="updateActivityShopOfActivityId" parameterType="MarketActivity">
		UPDATE bank_market_activity_shop s SET
		s.activity_id=#{activityId,jdbcType=VARCHAR}
		WHERE s.shop_id in
		<foreach collection="marActivityShop" index="index" item="item"
			open="(" separator="," close=")">
			#{item.shopId}
		</foreach>
	</update>

	<select id="selectActInfoByActId" resultMap="marketActivityResultMap">
		 
		select a.activity_id,s.shop_id  from
		bank_market_activity a left join
		bank_market_activity_shop s
		on a.activity_id=s.activity_id where a.activity_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="selectActAndShopInfoByActId" resultMap="marketActivityResultMap">
		select a.activity_id,s.shop_id from bank_market_activity a,
		bank_market_activity_shop s
		where a.activity_id=s.activity_id and a.activity_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<resultMap type="ActivityType" id="marketActivityTypeResultMap">
		<id column="activity_type_id" property="activityTypeId" />
		<result column="activity_type" property="activityType" />
		<result column="activity_type_no" property="activityTypeNo" />
	</resultMap>
	
	<select id="selectAllActivityTypeId" resultMap="marketActivityTypeResultMap">
		select
		t.activity_type_id, t.activity_type from bank_activity_type t
	</select>

	<select id="selectShowOrderCount" resultType="int" parameterType="int">
		 select count(1) from bank_market_activity y where y.activity_show_order=#{activityShowOrder} and y.is_check not in('d')
		 and y.activity_show_order &lt;&gt;0 and y.activity_one is null and y.is_top='1'
         and y.activity_status in('0','1')
	</select>
	
	<resultMap type="CityGps" id="cityGpsResultMap">
			<id column="CITY_ID"  property="cityId" />
			<result column="CITY_NO"  property="cityNo" />
			<result column="CITY_NAME"  property="cityName" />
			<result column="city_one"  property="cityOne" />
	</resultMap>
	
	<select id="selectAllCity" resultMap="cityGpsResultMap">
		SELECT s.city_no,s.city_name,s.city_one FROM bank_city_gps s order by convert(city_name using gbk) asc
	</select>
	 
</mapper>